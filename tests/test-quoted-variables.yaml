pipeline:
  name: test-quoted
  with:
    test.scripts.directory: $PIPELINER_HOME/tests/scripts
    test.property: "test value"
  jobs:
    - name: test-quoted
      steps:
        - name: cleanup file
          run: rm -Rf $PIPELINER_TMP/ps-aux-root.txt
        - name: step-1
          run: ps aux | awk '{ print $1, $11}' | grep root > $PIPELINER_TMP/ps-aux-root.txt
        - name: cleanup file
          run: rm -Rf $PIPELINER_TMP/ps-aux-root.txt
        - name: step-2
          run: echo '$PIPELINER_TMP' "$PIPELINER_TMP"
        - name: step-3
          run: echo "$PIPELINER_TMP" '$PIPELINER_TMP'
        - name: step-4
          run: echo '${PIPELINER_TMP}' "$PIPELINER_TMP"
        - name: step-5
          run: echo "$PIPELINER_TMP" '${PIPELINER_TMP}'
        - name: test-6
          run: echo "'$PIPELINER_TMP'" '$PIPELINER_TMP'
        - name: test-7
          run: echo '"$PIPELINER_TMP"' "$PIPELINER_TMP"
        - name: test-8
          run: echo \"\${{ test.property }}\" \"${{ test.property }}\"
        - name: test-9
          with:
            test.property.1: \${PWD}
            test.property.2: $PWD
            test.property.3: ${PWD}
            test.property.4: FOO_ ${{ test.property.2 }} _BAR
            test.property.5: FOO_ ${{ test.property.2 }} ${{ test.property.3 }} _BAR
          run: |
            echo \"\${{ test.property.1 }}\" \"${{ test.property.1 }}\" \"${{ test.property.2 }}\" \"${{ test.property.3 }}\" \"${{ test.property.4 }}\"
            ${{test.scripts.directory}}/test-arguments-are-equal.sh "${{ test.property.1 }}" "\${PWD}"
            ${{test.scripts.directory}}/test-arguments-are-equal.sh "${{ test.property.2 }}" "$PWD"
            ${{test.scripts.directory}}/test-arguments-are-equal.sh "${{ test.property.2 }}" "${PWD}"
            ${{test.scripts.directory}}/test-arguments-are-equal.sh "FOO_ $PWD _BAR" "${{ test.property.4 }}"
            ${{test.scripts.directory}}/test-arguments-are-equal.sh "FOO_ $PWD ${PWD} _BAR" "${{ test.property.5 }}"
